#!/usr/bin/env ruby
# Processes textgrid files and spits out a json file with all of the durations,
# rounded to the nearest 1/100th

require 'praat'
require 'json'

filename = ARGV[0].to_s

def round_timings(interval)
  if interval.respond_to? :rounded_max
    interval.rounded_max = interval.xmax.round(2).rationalize
    interval.rounded_min = interval.xmin.round(2).rationalize
  else
    interval.add_property(:rounded_max, interval.xmax.round(2).rationalize)
    interval.add_property(:rounded_min, interval.xmin.round(2).rationalize)
  end
end

def add_duration(interval)
  if interval.respond_to? :rounded_dur
    interval.rounded_dur = interval.rounded_max - interval.rounded_min
  else
    interval.add_property(:rounded_dur, interval.rounded_max - interval.rounded_min)
  end
end

# Expects a source textgrid filename with only one tier
source = Praat.parse_file(filename)
output = "#{File.basename(filename, File.extname(filename))}.json"
intervals = source.items[0].intervalss

# Mutates the intervals in place
intervals.each do |interval|
  round_timings interval
  add_duration interval
end

durations = intervals.map do |interval|
  {
    :duration_string => interval.rounded_dur.to_s,
    :rest => interval.text.empty?
  }
end

# Create an Array with the intervals and convert to JSON
File.open(output, "w") do |f|
  f.puts durations.to_json
end

